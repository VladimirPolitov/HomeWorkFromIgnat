{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/header.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior-Plus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","ava","src","avatar","cloud","name","cloudmessage","time","messageData","HW1","Affair","affair","item","priorityClass","priority","onClick","deleteAffairCallback","_id","button","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","onEnter","error","totalUsers","inputClass","erroeInput","input","greeting","value","onChange","onKeyDown","onBlur","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","key","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","Junior","Junior_Plus","Error404","PATH","Routess","path","element","Header","header","to","link","block","HW5","Routes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.67fc4dfa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2NOmW\",\"ava\":\"Message_ava__1X3yU\",\"cloud\":\"Message_cloud__2erVb\",\"name\":\"Message_name__1ovLB\",\"cloudmessage\":\"Message_cloudmessage__CUGNn\",\"time\":\"Message_time__16m4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__25R7s\",\"error\":\"Greeting_error__1wVMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"header_link__1iT3D\",\"block\":\"header_block__11xmb\",\"header\":\"header_header__2QakW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair__1_keQ\",\"button\":\"Affairs_button__2JkkY\",\"item\":\"Affairs_item__2AG7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__BNP0a\",\"superInput\":\"SuperInputText_superInput__2MU97\",\"errorInput\":\"SuperInputText_errorInput__3ARyN\",\"error\":\"SuperInputText_error__wztv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__xkFOY\",\"red\":\"SuperButton_red__2Qo8S\",\"button\":\"SuperButton_button__1HPhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__E8fZo\",\"column\":\"HW4_column__1h5bb\",\"testSpanError\":\"HW4_testSpanError__rBFz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3AkeB\",\"spanClassName\":\"SuperCheckbox_spanClassName__3ck4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3SmZb\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype messageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: messageType) {\n    return (\n        <div className={s.message}>\n            <div><img className={s.ava} src={props.avatar}/></div>\n            <div className={s.cloud}>\n            <div className={s.name}>{props.name}</div>\n            <div className={s.cloudmessage}>{props.message}</div>\n            <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n        <div className={s.affair}>\n            <div className={s.item}>{props.affair.name}</div>\n            <div className={s.priorityClass}>{props.affair.priority}</div>\n\n            <button onClick={deleteCallback} className={s.button}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType []\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n\n// constants\nconst defaultAffairs: AffairType [] = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType [], filter: FilterType): AffairType [] => {\n    if (filter === 'all') return affairs\n    else return affairs.filter(a => a.priority === filter)\n}\nexport const deleteAffair = (affairs: AffairType [], _id: number): AffairType [] => {\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType []>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2;\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport GreetingContainer from \"./GreetingContainer\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, onEnter, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.erroeInput : s.input // need to fix with (?:)\n\n    return (\n        <div className={s.greeting}>\n            <div>\n                <input value={name}\n                       onChange={setNameCallback}\n                       className={inputClass}\n                       onKeyDown={onEnter}\n                       onBlur={setNameCallback}\n                />\n                <div className={s.error}>{error}</div>\n            </div>\n\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\n            <div className={s.count}>{totalUsers}</div>\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const trimmedName = e.currentTarget.value.trim()\n\n        if (trimmedName) {\n            setName(trimmedName)\n            setError('')\n        } else {\n            setName('')\n            setError('name is Require!')\n        }\n    }\n\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`)\n        setName('')\n    } // need to fix\n\n\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) {\n            addUser()\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onEnter={onEnter}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string// need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const user = {\n            _id: v1(),\n            name: name,\n        }\n        setUsers([...users, user]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\nimport {Simulate} from \"react-dom/test-utils\";\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\r\n\r\nfunction Junior () {\r\n    return (\r\n        <div> Junior </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from \"react\";\r\n\r\nfunction Junior_Plus () {\r\n    return (\r\n        <div> JuniorPlus </div>\r\n    )\r\n}\r\n\r\nexport default Junior_Plus","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport {Route, Routes} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport Junior_Plus from \"./pages/Junior-Plus\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    Pre_Junior: '/pre-junior',\n    Junior: '/junior',\n    Junior_plus: '/junior-plus'\n}\n\nfunction Routess() {\n    return (\n        <div>\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} element={<PreJunior/>}/>\n                <Route path={PATH.Pre_Junior} element={<PreJunior/>}/>\n                <Route path={PATH.Junior} element={<Junior/>}/>\n                <Route path={PATH.Junior_plus} element={<Junior_Plus/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Routess\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport s from \"./header.module.css\";\n\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n            <NavLink to={PATH.Pre_Junior} className={s.link}>pre-junior</NavLink>\n            <NavLink to={PATH.Junior} className={s.link}>junior</NavLink>\n            <NavLink to={PATH.Junior_plus} className={s.link}>junior+</NavLink>\n            <div className={s.block}></div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routess from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter>\n                <Header/>\n                <Routess/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1';\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}